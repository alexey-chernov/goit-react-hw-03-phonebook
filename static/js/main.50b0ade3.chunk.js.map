{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/FormContacts/FormContacts.module.css","components/Container/Container.js","components/FormContacts/FormContacts.js","components/ListContacts/ListContacts.js","components/Filter/Filter.js","App.js","index.js","components/ListContacts/ListContacts.module.css"],"names":["module","exports","Container","children","className","styles","FormContacts","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","Form","Label","Input","type","maxLength","placeholder","title","required","onChange","pattern","mask","Button","Component","ListContactsItem","id","onDelete","Item","Text","Span","onClick","ListContacts","contacts","length","List","map","contact","key","Filter","App","filter","addContact","uuidv4","find","toLowerCase","alert","trim","test","deleteContact","changeFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedcontacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50b0ade3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__3FoRN\",\"Input\":\"Filter_Input__20k7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__1PDtW\",\"Label\":\"FormContacts_Label__13aMi\",\"Input\":\"FormContacts_Input__2v-lW\",\"Button\":\"FormContacts_Button__uqumT\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport InputMask from 'react-input-mask';\n\nimport styles from './FormContacts.module.css';\n\nclass FormContacts extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n\n        this.resetForm();\n    };\n\n    resetForm = () => this.setState({ name: '', number: '' });\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form className={styles.Form} onSubmit={this.handleSubmit}>\n                <label className={styles.Label}>\n                    Ім'я\n                    <InputMask\n                        className={styles.Input}\n                        type=\"text\"\n                        name=\"name\"\n                        //pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ]) ? [a-zA-Zа-яА-Я]*)*$\"\n                        maxLength='20'\n                        placeholder=\"Sylvester Stalone\"\n                        title=\"Ім'я може складатись лише із букв, апострофа, тире та пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т.д.\"\n                        required\n                        value={name}\n                        onChange={this.handleChange}\n                    />\n                </label>\n                <label className={styles.Label}>\n                    Номер\n                    <InputMask\n                        className={styles.Input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефону може складатись з цифр і може скаладтись з пробілів, тире, круглих дужок і може починатись з +\"\n                        required\n                        onChange={this.handleChange}\n                        value={number}\n                        placeholder=\"+38 (099) 999-99-99\"\n                        mask=\"+38 (099) 999-99-99\"\n                    />\n                </label>\n                <button className={styles.Button} type=\"submit\">\n                    Додати контакт\n                </button>\n            </form>\n        );\n    }\n}\n\nFormContacts.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormContacts;\n","import PropTypes from 'prop-types';\n\nimport styles from './ListContacts.module.css';\n\nconst ListContactsItem = ({ id, name, number, onDelete }) => {\n    return (\n        <li className={styles.Item}>\n            <p className={styles.Text}>\n                {name}: <span className={styles.Span}>{number}</span>\n            </p>\n            <button\n                className={styles.Button}\n                type=\"button\"\n                onClick={() => onDelete(id)}\n                title=\"Видалити\"\n            >\n                Видалити\n            </button>\n        </li>\n    );\n};\n\nconst ListContacts = ({ contacts, onDelete }) => {\n    if (contacts.length === 0) return null;\n    return (\n        <ul className={styles.List}>\n            {contacts.map(contact => (\n                <ListContactsItem\n                    {...contact}\n                    onDelete={onDelete}\n                    key={contact.id}\n                />\n            ))}\n        </ul>\n    );\n};\n\nListContacts.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ListContacts;\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label className={styles.Label}>\n            Пошук контакту за іменем\n            <input\n                type=\"text\"\n                name=\"filter\"\n                className={styles.Input}\n                value={value}\n                onChange={onChange}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Ім'я може складатись лише із букв, апострофа, тире та пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т.д.\"\n                required\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/FormContacts';\nimport ContactList from './components/ListContacts';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nclass App extends Component {\n\n    state = {\n        contacts: [],\n        filter: '',\n    };\n\n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parsedcontacts = JSON.parse(contacts);\n        parsedcontacts && this.setState({ contacts: parsedcontacts });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const nextContacts = this.state.contacts;\n        const prevContacts = prevState.contacts;\n\n        if (nextContacts !== prevContacts) {\n            localStorage.setItem('contacts', JSON.stringify(nextContacts));\n        }\n    }\n\n    addContact = ({ name, number }) => {\n        const contact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n\n        const { contacts } = this.state;\n\n        if (\n            contacts.find(\n                contact => contact.name.toLowerCase() === name.toLowerCase(),\n            )\n        ) {\n            alert(`${name} вже присутній в довіднику контактів.`);\n        } else if (contacts.find(contact => contact.number === number)) {\n            alert(`${number} вже присутній в довіднику.`);\n        } else if (name.trim() === '' || number.trim() === '') {\n            alert(\"Введіть назву контакту і номер телефону!\");\n        } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n            alert('Введіть правильний номер телефону!');\n        } else {\n            this.setState(({ contacts }) => ({\n                contacts: [...contacts, contact],\n            }));\n\n        }\n    };\n\n    deleteContact = id =>\n        this.setState(({ contacts }) => ({\n            contacts: contacts.filter(contact => contact.id !== id),\n        }));\n\n    changeFilter = event => {\n        this.setState({ filter: event.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    render() {\n        const { contacts, filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <Container>\n                <h1>Телефонний довідник</h1>\n                <ContactForm onSubmit={this.addContact} />\n                <h2>Контакти</h2>\n                {contacts.length > 1 && (\n                    <Filter value={filter} onChange={this.changeFilter} />\n                )}\n                {contacts.length > 0 ? (\n                    <ContactList\n                        contacts={visibleContacts}\n                        onDelete={this.deleteContact}\n                    />\n                ) : (\n                    <p>Телефонний довідник порожній. Додайте контакт, будь-ласка.</p>\n                )}\n            </Container>\n        );\n    }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__2LALo\",\"Item\":\"ListContacts_Item__1md0j\",\"Text\":\"ListContacts_Text__3EW7Y\",\"Span\":\"ListContacts_Span__1L_ta\",\"Button\":\"ListContacts_Button__g8jEU\"};"],"sourceRoot":""}